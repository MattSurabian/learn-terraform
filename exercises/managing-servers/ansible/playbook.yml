- hosts: all
  become: yes
  become_method: sudo
  vars:
    base_path: /mnt
    site_port: 8000
    site_fdqn: # from ec2 instance tags
    site_bucket: # from ec2 instance tags
  tasks:
    - name: ensure node ppa is installed
      apt_repository:
        repo: deb https://deb.nodesource.com/node_5.x trusty main
        state: present

    - name: ensure node gpg key is installed
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present

    - name: ensure apt cache is updated
      apt:
        update_cache: yes

    - name: ensure apt packages are installed
      apt:
        name: "{{ item }}"
        state: latest
      with_items:
        - nodejs
        - nginx
        - awscli

    - name: get instance tags
      shell: aws ec2 describe-tags --filters="Name=resource-id,Values=$(ec2metadata --instance-id)"
      environment:
        AWS_DEFAULT_REGION: us-east-1
      register: instance_data

    - name: create site_* references to tags
      set_fact: "site_{{item.Key}}=\"{{item.Value}}\""
      with_items: (instance_data.stdout|from_json).Tags

    - name: ensure nginx is configured
      template:
        src: nginx.conf
        dest: /etc/nginx/conf.d/

    - name: ensure default nginx server is not present
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: ensure nginx has been restarted
      service:
        name: nginx
        state: restarted

    - name: ensure app code is on the box
      copy:
        src: ../src/
        force: true
        dest: "{{ base_path }}"

    - name: ensure upstart script for app is in place
      template:
        src: app.conf
        dest: /etc/init

    - name: ensure packages have been installed
      npm:
        path: "{{ base_path }}"

    - name: start app
      service:
        name: app
        state: restarted
